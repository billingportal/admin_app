@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Options;
@inject IViewLocalizer Localizer;
@inject IOptions<RequestLocalizationOptions> LocOptions;
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures.Select( x =>
    new SelectListItem { Value = x.Name, Text = x.DisplayName } ).ToList();
}


<form id="localizationForm" asp-action="SetLanguage" asp-controller="Home" asp-route-returnUrl="@Context.Request.Path" method="post">

  @if(@requestCulture.RequestCulture.UICulture.Name == "ar")
  {
    <input hidden name="culture" value="en" />
    <a onclick="onLanguageLinkClick()" class="nav-link icon text-center">
      <i class="fe fe-globe"></i><span class="fs-16 ms-2 d-none d-xl-block">@Localizer["English"]</span>
    </a>
  }

  @if(@requestCulture.RequestCulture.UICulture.Name == "en")
  {
    <input hidden name="culture" value="ar" />
    <a onclick="onLanguageLinkClick()" class="nav-link icon text-center">
      <i class="fe fe-globe"></i><span class="fs-16 ms-2 d-none d-xl-block">العربية</span>
    </a>
  }

</form>

<script>

  function onLanguageLinkClick()
  {
    $("#localizationForm").submit();
  }

</script>
