
@model BillingPortalClient.ModelViews.TicketViewModel;

@using System.Text.Json

@{
    ViewData["Title"] = "Ticket Details";
    Layout = "_Layout";
}
<input type="text" hidden id="adminId" value="@User.Claims.FirstOrDefault( x => x.Type == "adminId" ).Value" />
<style>
    .ticket-page-heading {
        border-bottom: 1px solid #dedede;
        padding: 10px;
        display: flex;
        justify-content: space-between;
    }

    .tracking-back-icon {
        height: 16px;
        width: 16px;
        background: #A8ACB7 0% 0% no-repeat padding-box;
        opacity: 1;
    }

    .tracking-heading {
        text-align: left;
        font: normal normal bold 16px/35px Inter;
        letter-spacing: 0px;
        color: #3F058F;
        opacity: 1;
        display: inline;
        margin: 0;
    }

    .ticket-page-header-button {
        background: transparent linear-gradient(265deg, #C15555 0%, #F47356 100%) 0% 0% no-repeat padding-box;
        border-radius: 6px;
        opacity: 1;
        width: 110px;
        height: 24px;
        text-align: center;
        font: normal normal 600 10px/12px Inter;
        letter-spacing: 2px;
        color: #FFFFFF;
        text-transform: uppercase;
        opacity: 1;
        padding: inherit;
    }

    .ticket-page-heading-wrap {
        display: flex;
        align-items: center;
        justify-content: start;
        gap: 10px;
    }

    .ticket-section-spacing {
        padding: 10px 0;
    }


    .ticket-section-wrap {
        padding: 10px 0;
    }

    .ticket-section-main-card {
        height: 300px;
        background: #F4F8FA 0% 0% no-repeat padding-box;
        border-radius: 10px;
        opacity: 1;
        padding: 0 15px;
    }

    .ticket-section-main-card-wrap {
        display: flex;
        width: 100%;
        padding: 15px 0;
        gap: 35px;
    }

    .ticket-card-label {
        text-align: left;
        font: normal normal normal 12px/20px Inter;
        letter-spacing: 1.8px;
        color: #73798B;
        text-transform: uppercase;
        opacity: 1;
        margin: auto;
    }

    .ticket-card-heading {
        text-align: left;
        font: normal normal 600 14px/27px Inter;
        letter-spacing: 0px;
        color: #27292C;
        opacity: 1;
        margin: auto;
    }

    .file-view-img {
        text-align: left;
        font: normal normal 600 14px/27px Inter;
        letter-spacing: 0px;
        color: #6335A5;
        opacity: 1;
    }

    .file-view-img-div {
        display: flex;
        align-items: end;
        gap: 10px;
    }

    .file-view-img-button {
        background: #DBE5EA 0% 0% no-repeat padding-box;
        border: 1px solid #D6DFE8;
        border-radius: 6px;
        opacity: 1;
        text-align: center;
        font: normal normal normal 12px/10px Inter;
        letter-spacing: 0px;
        color: #3B444D;
        text-transform: capitalize;
        opacity: 1;
        width: 50px;
        height: 24px;
        margin-bottom: 15px;
        padding: inherit;
    }

    .hr-spacer {
        height: 1px;
        background-color: #dedede;
        margin: 10px 0;
    }

    .ticket-section-main-card-wrap-border {
        border-bottom: 1px solid #dedede;
    }

    .comment-div {
            padding-top: 10px;
    padding-left: 15px;
    }

    .comment-user {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
    }

    .comment-profile {
        width: 50px;
        height: 50px;
        opacity: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        border-radius: 100px;
    }

        .comment-profile span {
            font: normal normal bold 18px/16px Inter;
            color: #3F058F;
        }

    .comment-user-name {
        text-align: left;
        font: normal normal 600 16px/16px Inter;
        letter-spacing: 0px;
        color: #000000;
        opacity: 1;
        margin: 0;
    }
    .comment-detail{
        margin-top:-20px;
    }
     .comment-description{
        margin-top:-20px;
    }

    .comment-date {
        text-align: right;
        font: normal normal medium 12px/16px Inter;
        letter-spacing: 0px;
        color: #73798B;
        opacity: 1;
    }

    .comment-section-place {
        width: 100%;
    }

    .comment-p {
        text-align: left;
        font: normal normal normal 14px/18px Inter;
        letter-spacing: 0px;
        color: #3b444dcf;
        opacity: 1;
        margin-left: 60px;
    }

    .comment-write {
        background: var(--white) 0% 0% no-repeat padding-box;
        background: #FFFFFF 0% 0% no-repeat padding-box;
        border: 1px solid #E9EFF5;
        border-radius: 10px;
        opacity: 1;
        width: 100%;
        height: 50px;
        display: flex;
        overflow: hidden
    }

        .comment-write input {
            width: 100%;
            border: 0;
            height: 100%;
            outline: none;
            font: normal normal normal 12px/15px Inter;
            padding: 5px 15px;
        }

    .comment-write-button {
        width: 200px;
        height: 50px;
        background: #F4F8FA 0% 0% no-repeat padding-box;
        border-left: 1px solid #E9EFF5;
        border-radius: 0px 4px 4px 0px;
        opacity: 1;
        font: normal normal 600 20px/15px Inter;
        letter-spacing: 1.2px;
        color: #FC6719;
        text-transform: uppercase;
        padding: 0
    }

    .close-ticket-button {
        text-align: left;
        font: normal normal 600 12px/18px Inter;
        letter-spacing: 0px;
        color: #FAF8FC;
        width: 150px;
        height: 36px;
        background: transparent linear-gradient(90deg, #6221BA 0%, #401083 100%) 0% 0% no-repeat padding-box;
        border-radius: 6px;
        opacity: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
    }

    .open-ticket-button {
        height: 36px;
        background: #FDFEFF 0% 0% no-repeat padding-box;
        border: 1px solid #D8CDE9;
        text-align: left;
        font: normal normal 600 12px/18px Inter;
        letter-spacing: 0px;
        color: #3F058F;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 5px 30px;
    }

    .tickets-button-div-wrap {
        padding: 20px 0 0 0;
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .activity-container {
        width: 100%;
        background: #F5F5FA 0% 0% no-repeat padding-box;
        border-radius: 8px;
        opacity: 1;
        padding: 15px;
        margin-bottom: 30px
    }

    .activity-heading {
        text-align: left;
        font: normal normal 600 14px/17px Inter;
        letter-spacing: 0px;
        color: #3F058F;
        text-transform: capitalize;
        opacity: 1;
        border-bottom: 1px solid #E6E6F5;
        padding-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .activity-heading img {
            height: 20px;
            width: 20px;
        }

    .activityPlace {
        padding: 0px 15px 20px 30px;
    }

    .activity-wrap {
        padding: 10px;
        height: 80px;
        position: relative;
    }

    .activity-date-label {
        width: 150px;
        height: 32px;
        /* UI Properties */
        background: #E2D9F0 0% 0% no-repeat padding-box;
        border-radius: 4px;
        opacity: 1;
        text-align: left;
        font: normal normal bold 12px/12px Inter;
        letter-spacing: 0px;
        color: #191616;
        opacity: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .activity-time {
        text-align: left;
        font: normal normal normal 12px/24px Inter;
        letter-spacing: 0px;
        color: #3B444D;
        opacity: 1;
    }

    .activity-des {
        text-align: left;
        letter-spacing: 0px;
        color: #73798B;
        opacity: 1;
        font: normal normal 12px/18px Inter;
    }

    .activityLocation {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .map-icon {
        height: 25px;
        width: 25px;
        background: #EAE7F4 0% 0% no-repeat padding-box;
        opacity: 1;
        border-radius: 100px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .map-icon img {
            height: 15px;
        }

    .map-location-name {
        text-align: left;
        font: normal normal normal 14px/19px Inter;
        letter-spacing: 0px;
        color: #6335A5;
        opacity: 1;
    }

    .activity-wrap:before {
        content: " ";
        position: absolute;
        width: 20px;
        height: 20px;
        background: #FC6719 0% 0% no-repeat padding-box;
        border: 1px solid #FFFFFF;
        opacity: 1;
        border-radius: 10px;
        left: -25px;
        top: 15px;
    }

    .activity-wrap:after {
        content: " ";
        position: absolute;
        width: 2px;
        height: 110px;
        background: #FC6719 0% 0% no-repeat padding-box;
        opacity: 1;
        left: -15.5px;
        top: 35px;
    }

    .activity-wrap:last-child::after {
        content: unset !important;
    }

    .activity-ticket-heading {
        text-align: left;
        font: normal normal bold 12px/28px Inter;
        letter-spacing: 0px;
        color: #191616;
        opacity: 1;
    }

    .activity-ticket-span {
        text-align: right;
        font: normal normal normal 12px/20px Inter;
        letter-spacing: 0px;
        color: #73798B;
        opacity: 1;
    }

    .activity-ticket-wrap {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .activity-ticket-p {
        text-align: left;
        font: normal normal normal 12px/18px Inter;
        letter-spacing: 0px;
        color: #73798B;
        opacity: 1;
    }

    .activity-timeline-span {
        text-align: left;
        font: normal normal medium 12px/20px Inter;
        letter-spacing: 0px;
        color: #73798B;
    }

    .note-write {
        background: var(--white) 0% 0% no-repeat padding-box;
        background: #FFFFFF 0% 0% no-repeat padding-box;
        border: 1px solid #E9EFF5;
        border-radius: 4px;
        opacity: 1;
        width: 100%;
        height: 40px;
        display: flex;
        overflow: hidden;
        padding: 5px;
        margin: 5px 0;
    }

        .note-write input {
            width: 100%;
            border: 0;
            height: 100%;
            outline: none;
            font: normal normal normal 12px/15px Inter;
            padding: 5px 15px;
        }

    .note-write-button {
        width: 70px;
        height: 28px;
        background: #F4F8FA 0% 0% no-repeat padding-box;
        border: 1px solid #E9EFF5;
        border-radius: 0px 4px 4px 0px;
        opacity: 1;
        font: normal normal 600 12px/15px Inter;
        letter-spacing: 1.2px;
        color: #FC6719;
        text-transform: uppercase;
        padding: 0
    }

    .Previously-heading {
        text-align: left;
        font: normal normal 600 12px/20px Inter;
        letter-spacing: 0px;
        color: #9398A5;
        opacity: 1;
    }

    .notes-setion {
        height: 70%;
        background: #FFFFFF 0% 0% no-repeat padding-box;
        border-radius: 4px;
        opacity: 1;
        padding: 10px;
        margin-bottom: 10px;
    }

    .note-heading {
        text-align: left;
        font: normal normal bold 12px/16px Inter;
        letter-spacing: 0px;
        color: #3B444D;
        opacity: 1;
    }

    .note-span {
        text-align: left;
        font: normal normal normal 12px/16px Inter;
        letter-spacing: 0px;
        color: #7C8395;
        opacity: 1;
        font-size: 15px;
    }

    .ticket-spacer-div {
        border-left: 1px solid #dedede;
    }

    .upload-icon-label {
        height: 100%;
        width: 70px;
        padding: 8px;
        border-left: 1px solid #E9EFF5;
        display: flex;
        justify-content: center;
        background: #F4F8FA 0% 0% no-repeat padding-box;
        cursor: pointer;
    }

    .upload-icon-label {
        height: 100%;
    }

    .img-download-file {
        color: #3F058F;
        background: #F5F5FA 0% 0% no-repeat padding-box;
        display: inline-block;
        padding: 4px 12px;
        border-radius: 5px;
        font: normal normal 600 14px/17px Inter;
    }

    .file-download-name {
        text-align: left;
        font: normal normal 600 20px/20px Inter;
        letter-spacing: 0px;
        color: #27292C;
        margin: 30px 0 10px 0;
    }

    .comment-write-input-img {
        height: 30px;
        width: 30px;
        border-radius: 100px;
        overflow: hidden;
    }

        .comment-write-input-img img {
            height: 100%;
            width: 100%;
        }

    .comment-write-wrap {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .Assigne-color {
        color: #FC6719;
        font: normal normal 600 14px/17px Inter;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="ticket-page-heading">
            <div class="ticket-page-heading-wrap">
                <h3 class="tracking-heading">#@Model.ticket.Id.ToString()</h3>
                <button class="ticket-page-header-button" id="ticketStatusSpan">@Model.ticket.Status</button>
            </div>
            <div style="display:flex; gap:10px; align-items:center; padding-right: 2%;">
                <span class="Assigne-color">Asignee :</span>
                <span>

                    @if (Model.ticket.Admin == null)
                    {
                        <button class="open-ticket-button dropdown-toggle" type="button" id="ticketAssigneeDropDown" data-bs-toggle="dropdown" aria-expanded="false" style="width:200px">
                            -no assignee-
                        </button>
                    }
                    else
                    {
                        <button class="open-ticket-button dropdown-toggle" type="button" id="ticketAssigneeDropDown" data-bs-toggle="dropdown" aria-expanded="false">
                            @Model.ticket.Admin.FirstName @Model.ticket.Admin.LastName
                        </button>
                    }

                    <ul class="dropdown-menu" aria-labelledby="ticketAssigneeDropDown">
                        @foreach (var item in Model.rolesUsers)
                        {
                            <li>
                                <a class="dropdown-item"><h4 style="margin:0;">@item.roleName</h4></a>
                                <ul>
                                    @foreach (var user in item.users)
                                    {
                                        <li><a class="dropdown-item" onclick="changeTicketAssignee(@Model.ticket.Id, @user.Id)" href="javascript:void(0)">@user.FirstName @user.LastName</a></li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </span>
                <span>
                    <button class="open-ticket-button dropdown-toggle" type="button" id="ticketStatusDropDown" data-bs-toggle="dropdown" aria-expanded="false" style="width:200px; background: transparent linear-gradient(265deg, #C15555 0%, #F47356 100%) 0% 0% no-repeat padding-box; color: white; margin-left:20px;">
                        @Model.ticket.Status
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="ticketStatusDropDown">
                        <li><a class="dropdown-item" onclick="changeTicketStatus(@Model.ticket.Id, 'Closed')" href="javascript:void(0)">Closed</a></li>
                        <li><a class="dropdown-item" onclick="changeTicketStatus(@Model.ticket.Id, 'Inprogress')" href="javascript:void(0)">In Progress</a></li>
                        <li><a class="dropdown-item" onclick="changeTicketStatus(@Model.ticket.Id, 'Rejected')" href="javascript:void(0)">Rejected</a></li>
                    </ul>
                </span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-9">
            <div class="ticket-section-wrap">
                <div class="ticket-section-main-card">
                    <div class="row">
                        <div class="col-12 ticket-section-main-card-wrap">
                            <div class="col-md-3">
                                <label class="ticket-card-label">Account Name</label>
                                <h4 class="ticket-card-heading">@Model.ticket.Account.AccountName</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Account Number</label>
                                <h4 class="ticket-card-heading">@Model.ticket.Account.AccountNumber</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Email</label>
                                <h4 class="ticket-card-heading">@Model.ticket.Account.Customer.Email</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Region</label>
                                <h4 class="ticket-card-heading">@Model.ticket.Account.Customer.Region</h4>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 ticket-section-main-card-wrap ticket-section-main-card-wrap-border">
                            <div class="col-md-3">
                                <label class="ticket-card-label">Instrument Type</label>
                                <h4 class="ticket-card-heading">@Model.ticket.InstumentType</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Instrument Number</label>
                                <h4 class="ticket-card-heading">@Model.ticket.InstrumentNumber</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Created On</label>
                                <h4 class="ticket-card-heading">@Model.ticket.TicketDate.Value.ToString("dd MMMM, yyyy")</h4>
                            </div>
                            <div class="col-md-3">
                                <label class="ticket-card-label">Issue Type</label>
                                <h4 class="ticket-card-heading">@Model.ticket.IssueType</h4>
                            </div>
                        </div>
                        <div class="col-md-12 file-view-img-div">
                            <div>
                                <label class="ticket-card-label">Uploaded File</label>
                                <h4 class="file-view-img">@(Model.ticket.Image != null && Model.ticket.Image != "" ? Model.ticket.Image : "Not Attached")</h4>
                            </div>
                            @*<button class="file-view-img-button">View</button>*@
                        </div>
                
                    </div>
                    <div class="ticket-section-main-card-wrap">
                        <div>
                            <label class="ticket-card-label">NOTE</label>
                            <h4 class="ticket-card-heading">@Model.ticket.Description</h4>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom:10px">
                    <div class="col-md-12" id="fileSection">
                        <h4 class="file-download-name">Files</h4>
                        @if (Model.ticket.TicketFiles != null)
                        {
                            @foreach (var item in Model.ticket.TicketFiles)
                            {
                                if (!string.IsNullOrEmpty(item.EncodedFile))
                                {
                                    <a href="@item.EncodedFile" download="@item.FileName" class="img-download-file">@item.FileName</a>
                                }
                            }

                        }

                    </div>
                </div>
                <div class="comment-section-place mt-5">
                    <div class="comment-section-place-wrap">
                        <div class="comment-write-wrap">
                            <div class="comment-profile" style="margin-left:15px;">
                                <img src="~/assets/images/png/A-Circle.png" />
                            </div>
                            <div class="comment-write">
                                <input type="text" placeholder="Reply..." id="ticketCommentText" />
                                <label for="myFile" class="upload-icon-label">
                                    <img src="~/assets/images/png/UploadIcon.png" class="file-upload-icon" alt="Upload Icon" />
                                </label>
                                <button class="comment-write-button" type="button" onclick="sendButtonOnClick()">Send</button>
                                <input type="file" id="myFile" name="filename" style="display:none;">
                            </div>
                        </div>
                            <a style="color:black; margin-left:80px;">Pro tip : Press <span style="background-color: rgb(255, 181, 69); font-weight: bold;">Enter</span> to Comment
                        </a>


                        @*<div class="tickets-button-div-wrap">
                                <button class="close-ticket-button">Close Ticket</button>
                                <button class="open-ticket-button">Open Ticket</button>
                            </div>*@
                        @if (Model.ticket.TicketComments.Count > 0)
                        {
                            foreach (var item in Model.ticket.TicketComments.OrderByDescending(x => x.CreatedDate))
                            {
                                <div class="comment-div" id="commentsSection">
                                    <div class="comment-user">
                                        <div class="comment-profile">
                                            @if (item.Admin != null)
                                            {
                                                <img src="~/assets/images/png/A-Circle.png" style="height:100% ;width:100%" />
                                            }
                                            else
                                            {
                                                <img src="~/assets/images/png/C-Circle.png" style="height:100% ;width:100%;" />


                                            }
                                        </div>
                                        <div class="comment-detail d-flex">
                                            @if (item.Admin != null)
                                            {
                                                <h4 class="comment-user-name">@(item.Admin.FirstName + " " + item.Admin.LastName)</h4>

                                            }
                                            else
                                            {
                                                <h4 class="comment-user-name">@item.CustomerAccount.AccountName</h4>

                                            }
                                            <span class="comment-date" style="margin-left:10px">@item.CreatedDate.Value.ToShortDateString()</span>
                                        </div>
                                    </div>
                                    <div class="comment-description">
                                        <p class="comment-p">@item.Comment</p>
                                    </div>
                                    <div class="hr-spacer"></div>

                                </div>
                            }
                        }




                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 ticket-spacer-div">
            <div class="ticket-section-wrap">
                <div class="activity-container">
                    <div>
                        <h5 class="activity-heading">Activity</h5>
                        <span class="activity-timeline-span">Timeline</span>
                        <div class="activityPlace">
                            @foreach (var item in Model.ticket.ActivityLogs)
                            {
                                <div class="activity-wrap">
                                    <div class="activity-ticket-wrap">
                                        <h4 class="activity-ticket-heading">@item.CreatedDate.Value.ToString("dd MMMM, yyyy")</h4>
                                        @*<span class="activity-ticket-span">Status: Open</span>*@
                                    </div>
                                    <p class="activity-ticket-p">@item.LogValue</p>
                                </div>
                            }


                        </div>
                    </div>
                </div>
                <div class="activity-container">

                    <div>

                        <h5 class="activity-heading">Notes</h5>
                        <span class="activity-timeline-span">You can add private notes which will be visible to your team members only</span>
                        <div class="note-write">
                            <input placeholder="Add note here.." id="notesTextBox" />
                            <button class="note-write-button" type="submit" onclick="addNotesButtonClick()">Add</button>
                        </div>
                        <h3 class="Previously-heading">Previously Added Notes</h3>
                        @foreach (var item in Model.ticket.TicketNotes.OrderByDescending(x => x.CreatedDate))
                        {
                            <div class="notes-setion" id="ticketNote">
                                <h4 class="note-heading">@item.Notes</h4>
                                <span class="note-span">&#64; @item.Admin.FirstName @item.CreatedDate</span>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    console.log('Ticket Model:', @Html.Raw(Json.Serialize(Model.ticket)));
  var model = @Html.Raw(JsonSerializer.Serialize(Model));

  var connection = new signalR.HubConnectionBuilder().withUrl("https://billingportalapis.azurewebsites.net/chatHub").build();

  //var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:7069/chatHub").withAutomaticReconnect().build();
  var username = "aa1";

  connection.on("ReceiveMessage", function(ticketComment){
    //alert(user + ': ' + message)
    //alert(ticketComment)
    console.log(ticketComment)
    var comment = ticketComment.comment;
    var createdDate = new Date(ticketComment.createDate).toLocaleDateString('en-US', { year: 'numeric', month: 'numeric', day: 'numeric' , hour: 'numeric', minute: 'numeric', second: 'numeric' });
    var ticketId = ticketComment.ticketId;
    var commentId = ticketComment.commentId;
    var adminId = ticketComment.adminId;
    var adminFullName = ticketComment.adminFirstName + ' ' + ticketComment.adminLastName;
    var customerAccountId = ticketComment.customerAccountId;
    var customerName = ticketComment.customerName;
    var customerNameFirstChar = customerName != null ? customerName[0] : '';
    var roundLogo = '';
    var adminNameFirstChar = adminFullName != null ? adminFullName[0] : '';
    var commenterName = '';



    if(adminId != null)
    {
      roundLogo = `<span>${adminNameFirstChar}</span>`
      commenterName = `<span>${adminFullName}</span>`
    }
    else
    {
      roundLogo = `<span>${customerNameFirstChar}</span>`
      commenterName = `<span>${customerName}</span>`
    }

      var newComment = `<div class="comment-user">
                            <div class="comment-profile">
                                    <img src="/assets/images/png/A-Circle.png" style="height:100% ;width:100%">
                            </div>
                            <div class="comment-detail d-flex">
                                    <h4 class="comment-user-name">${commenterName}</h4>
                                <span class="comment-date" style="margin-left:10px">${createdDate}</span>
                            </div>
                        </div>
                        <div class="comment-description">
                            <p class="comment-p">${comment}</p>
                        </div>
                        <div class="hr-spacer"></div>`
    $("#commentsSection").prepend(newComment);

    if(ticketComment.filename != "" && ticketComment.base64String != "" )
    {
      createDownloadLink(ticketComment.base64String, ticketComment.filename, "sql");
    }


  })

  connection.start().then(function() {
    console.log('connection started')
  }).catch(function(err){
    return console.error(err.toString());
  })

  document.addEventListener("keydown", function(event) {
    if (event.key === "Enter") {
        sendButtonOnClick();
    }
});

function sendButtonOnClick() {
    var comment = $("#ticketCommentText").val();
    if (comment === null || comment.trim() === "") {
        alert('Kindly add comment.');
        return;
    }

    var ticketId = model.ticket.id
    var adminId = $("#adminId").val();
    var customerId = 0
    var base64String = '';

    const fileInput = document.getElementById('myFile');
    const file = fileInput.files[0];

    if (file) {
        const reader = new FileReader();

        // Set up FileReader onload event
        reader.onload = function(event) {
            base64String = event.target.result; // Result will contain the base64 string
            console.log(base64String); // Use or display the base64 string as needed


            connection.invoke("SaveComment", Number(adminId), customerId, comment, Number(ticketId), base64String, file.name).then(function() {
              //alert(res)

              $("#ticketCommentText").val('');
            }).catch(function(err) {
              return console.error(err.toString());
            })
        };

        // Read file as Data URL (base64)
        reader.readAsDataURL(file);
    }
    else
    {
      connection.invoke("SaveComment", Number(adminId), customerId, comment, Number(ticketId), '', '').then(function() {
      //alert(res)

        $("#ticketCommentText").val('');
      }).catch(function(err) {
        return console.error(err.toString());
      })
    }

    fileInput.value = '';
  }


  function createDownloadLink(base64String, fileName, fileType) {

    // Create a link element
    const downloadLink = document.createElement('a');
    downloadLink.href = base64String;
    downloadLink.download = fileName;
    downloadLink.innerText = fileName;
    downloadLink.style.color = "blue";
    downloadLink.style.display = 'block';

    $("#fileSection").append(downloadLink);
}



 function addCommentButtonClick()
 {
   $("#addCommentModal").modal('show');
 }

 function changeTicketStatus(status)
 {
   $("#ticketStatus").val(status)
   $("#ticketStatusForm").submit();
 }

 function changeTicketStatus(val1, val2)
 {
   console.log(val1,val2)
   var postObject = new Object();
   postObject.ticketId = val1;
   postObject.status = val2;

   if (postObject != null) {
    console.log({postObject})

    $.ajax({
        type: "POST",
        url: "/ticket/UpdateTicketStatus1",
        data: JSON.stringify(postObject),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(response) {
          if(response == true)
          {
            $("#ticketStatusDropDown").text(val2)
            $("#ticketStatusSpan").text(val2)


          }
        },
        failure: function(response) {
            alert(response.responseText);
        },
        error: function(response) {
            alert(response.responseText);
        }
    });
    }
 }

 function changeTicketAssignee(val1, val2)
 {
   console.log(val1,val2)
   var postObject = new Object();
   postObject.ticketId = val1;
   postObject.assigneeId = val2;

   $.ajax({
        type: "POST",
        url: "/ticket/UpdateTicketAssignee",
        data: JSON.stringify(postObject),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(response) {
          if(response != null)
          {
            $("#ticketAssigneeDropDown").text(response.admin.firstName + ' ' + response.admin.lastName)

          }
        },
        failure: function(response) {
            alert(response.responseText);
        },
        error: function(response) {
            alert(response.responseText);
        }
    });
 }

 function addNotesButtonClick()
 {
   if($("#notesTextBox").val() == '')
   {
     alert('Kindly add notes.')
     return
   }
   var postObject = new Object();
   postObject.ticketId = model.ticket.id;
   postObject.adminId = $("#adminId").val();
   postObject.notes = $("#notesTextBox").val();

   $.ajax({
        type: "POST",
        url: "/ticket/AddTicketNotes",
        data: JSON.stringify(postObject),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(response) {
          if(response != null)
          {
            var ticketNotesRow = `<div class="notes-setion" style="height: 70%; background: #FFFFFF 0% 0% no-repeat padding-box; border-radius: 4px; opacity: 1;  padding: 10px; margin-bottom: 10px;" id="ticketNote">
                                <h4 class="note-heading" style="text-align: left; font: normal normal bold 12px/16px Inter; letter-spacing: 0px; color: #3B444D; opacity: 1;">${response.notes}</h4>
                                <span class="note-span" style="text-align: left; font: normal normal normal 12px/16px Inter; letter-spacing: 0px;color: #7C8395;opacity: 1;font-size: 15px;">&#64; ${response.admin.firstName} ${new Date(response.createdDate).toLocaleDateString('en-US', { year: 'numeric', month: 'numeric', day: 'numeric' , hour: 'numeric', minute: 'numeric', second: 'numeric' })}</span>
                                </div>`
                  
@*             
            `<h4>${response.notes}</h4>
                                <span>${response.admin.firstName} ${new Date(response.createdDate).toLocaleDateString()}</span>` *@
              $("#ticketNote").prepend(ticketNotesRow);
            $("#notesTextBox").val('');
          }
        },
        failure: function(response) {
            alert(response.responseText);
        },
        error: function(response) {
            alert(response.responseText);
        }
    });
 }

</script>

